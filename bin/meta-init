#!/usr/bin/env node

const fs = require('fs');
const debug = require('debug')('meta-init');
const path = require('path');
const util = require('util');

if (process.argv[2] === '--help') {
  return console.log(`\n  usage:\n\n    meta init\n`);
}

let force = false;

if (process.argv[2] === '--force') {
  force = true;
}

var meta = null; 
var buffer = null;

const metaLocation = path.join(process.cwd(), '.meta');

try {
  buffer = fs.readFileSync(metaLocation);
  debug(`.meta file found at ${metaLocation}`);
} catch (e) {
  debug(`no .meta file found at ${metaLocation}: ${e}`);
}

if (buffer) {
  try {
    meta = JSON.parse(buffer.toString());
    debug(`.meta file contents parsed: ${util.inspect(meta, null, Infinity)}`);
  } catch (e) {
    debug(`error parsing .meta JSON: ${e}`);
  }
}

if (meta && ! force) return console.error(`A .meta file already exists in ${process.cwd()}. User --force to overwrite.`);

console.log(`creating a .meta file in ${process.cwd()}`);

const metaJson = JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'support', '.meta')).toString());

// TODO: detect git repositories and add to metaJson

fs.writeFileSync(path.join(process.cwd(), '.meta'), JSON.stringify(metaJson, null, ' '));